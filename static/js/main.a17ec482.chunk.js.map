{"version":3,"sources":["pages/shoppingcart/shoppingcart.js","pages/itemPage/index.js","pages/404Page/index.js","pages/HomePage/index.js","App.js","serviceWorker.js","index.js"],"names":["ShoppingCartPage","require","props","removeAfterPurchase","buyItems","forEach","item","deleteItem","key","purchaseItem","a","state","email","alert","console","log","formatitems","price","name","replace","count","invoiceID","axios","post","then","res","data","hasOwnProperty","urlbus","_id","catch","err","window","location","setName","event","setState","target","value","setPhoneNumber","phoneNumber","setEmail","onBuy","itemsToBuy","remove","newCart","shoppingCart","filter","localStorage","setItem","JSON","stringify","deleteStore","store","cart","parse","this","arr","agg","push","buy","to","pathname","id","className","type","placeholder","onChange","Object","keys","aggregate","map","storeIts","onClick","src","url","alt","style","height","React","Component","ItemPage","setQuantity","quantity","itemID","imageURL","desc","color","loading","size","slidenum","slidelist","otherInfo","redirect","addCart","bind","redirectToCart","handleChangeColor","handleChangeSize","match","params","removeItem","get","status","history","error","getData","e","newColor","currentTarget","preventDefault","isGood","oldData","Array","isArray","obj","uuid","paddingBottom","Button","variant","margin","marginTop","items","onError","startIcon","ErrorPage","textDecoration","HomePage","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mVAoUeA,GA5TAC,EAAQ,I,kDAMnB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IA8BVC,oBAAsB,SAACC,GACrBA,EAASC,SAAQ,SAAAC,GACf,EAAKC,WAAWD,EAAKE,SAjCP,EAuClBC,aAvCkB,uCAuCH,WAAOL,GAAP,iBAAAM,EAAA,yDACW,KAArB,EAAKC,MAAMC,MADD,uBAEXC,MAAM,wBAFK,iCAIbC,QAAQC,IAAI,aAAcX,EAAS,IAC/BY,EAAY,GAChBZ,EAASC,QAAT,uCAAiB,WAAMC,GAAN,SAAAI,EAAA,sDACfI,QAAQC,IAAIT,EAAKW,OACjBD,EAAYV,EAAKY,KAAKC,QAAQ,KAAM,KAAK,CAACb,EAAKW,MAAME,QAAQ,KAAM,IAAIA,QAAQ,IAAK,IAAKb,EAAKc,OAF/E,2CAAjB,uDAIAN,QAAQC,IAAIC,GACRK,EAAU,GAED,2CAbA,UAcPC,IAAMC,KADC,2CACY,CAACX,MAAM,sBAAsBY,KAAhD,+BAAAd,EAAA,MAAqD,WAAOe,GAAP,eAAAf,EAAA,yDACzDI,QAAQC,IAAIU,IACTA,EAAIC,KAAKC,eAAe,OAF8B,wBAGnDC,EAAS,yCACbP,EAAUI,EAAIC,KAAKG,IAJoC,SAKjDP,IAAMC,KAAKK,EAAQ,CAAC,UAAYH,EAAIC,KAAKG,IAAI,MAAQb,IAAcQ,MAAK,SAACC,GAC7EX,QAAQC,IAAI,cAAeU,MAN0B,cAQvDX,QAAQC,IAAI,WACRa,EAAS,8CAT0C,UAUjDN,IAAMC,KAAKK,EAAQ,CAAC,QAAUP,EAAU,QAAU,EAAKV,MAAMC,QAAQY,MAAK,SAACC,GAC/EX,QAAQC,IAAI,aAAcU,MAX2B,gCAcvDZ,MAAM,mBAdiD,4CAArD,uDAiBHiB,OAAM,SAASC,GAChBjB,QAAQC,IAAIgB,MAhCD,QAsCbC,OAAOC,SAASd,QAAQ,kBAAkBE,GAtC7B,4CAvCG,wDA2IlBa,QAAU,SAACC,GACT,EAAKC,SAAS,CAAClB,KAAKiB,EAAME,OAAOC,SA5IjB,EA+IlBC,eAAiB,SAACJ,GAChB,EAAKC,SAAS,CAACI,YAAYL,EAAME,OAAOC,SAhJxB,EAmJlBG,SAAW,SAACN,GACV,EAAKC,SAAS,CAACxB,MAAMuB,EAAME,OAAOC,SApJlB,EAwJlBI,MAAQ,SAACC,KAxJS,EA8JlBpC,WAAa,SAACqC,GACZ,IACIC,EADO,EAAKlC,MAAMmC,aACHC,QAAO,SAACzC,GAAD,OAC1BA,EAAKE,MAAQoC,KAEb,EAAKR,UAAS,SAACzB,GAEb,MAAO,CAACmC,aAAcD,MAGxBG,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,KAxK5B,EA4KlBO,YAAc,SAACR,GAEb,EAAKR,UAAS,SAACzB,GAMb,MAAO,CAACmC,aAJGnC,EAAMmC,aACDC,QAAO,SAACzC,GAAD,OACvBA,EAAK+C,QAAUT,UAhLf,EAAKjC,MAAQ,CACXO,KAAK,GACLsB,YAAY,GACZ5B,MAAM,GACNkC,aAAa,IAND,E,gEAahB,IAAIQ,EAAON,aAAarB,eAAe,QAAUuB,KAAKK,MAAMP,aAAaM,MAAQ,GACjFxC,QAAQC,IAAIuC,GACZE,KAAKpB,SAAS,CAACU,aAAcQ,M,gCAIrBG,GACR,IAAIC,EAAM,GAOV,OANAD,EAAIpD,SAAQ,SAACC,GACX,IAAI+C,EAAQ/C,EAAK+C,MACjBK,EAAIL,GAASK,EAAIL,GAAOM,KAAKrD,GAAQoD,EAAIL,GAAS,CAAC/C,MAI9CoD,I,+BAiKA,IAAD,OACN,OAAGF,KAAK7C,MAAMiD,IAEV,kBAAC,IAAD,CAAUC,GAAK,CAEbC,SAAS,gBACTnD,MAAO,CAACoD,GAAIP,KAAK7C,MAAMgC,eAM/B,6BAGE,yBAAKqB,UAAY,mBACf,yBAAKA,UAAW,aACd,yBAAKA,UAAY,aACX,wBAAIA,UAAY,SAAhB,iBAEA,wBAAIA,UAAW,YAAf,6CA8CR,yBAAKA,UAAY,WAKjB,yBAAKA,UAAY,aACjB,yBAAKA,UAAY,4BAAjB,UACU,yBAAKA,UAAY,uBACrB,yBAAKA,UAAY,cACf,yBAAKA,UAAU,WACX,2BAAOA,UAAU,QAAQC,KAAK,OAAOC,YAAY,wBAAwBC,SAAUX,KAAKf,eAKlG,yBAAKuB,UAAY,WACb,yBAAKA,UAAY,UAIjBI,OAAOC,KAAKb,KAAKc,UAAUd,KAAK7C,MAAMmC,eAAeyB,KAAI,SAAClB,GACxD,IACImB,EADM,EAAKF,UAAU,EAAK3D,MAAMmC,cACjBO,GACnB,OACE,yBAAKW,UAAU,MAAMxD,IAAK6C,GAE1B,wBAAIW,UAAW,aAAaX,GAF5B,IAGCmB,EAASD,KAAI,SAACjE,GACf,OACE,yBAAK0D,UAAY,UAAUxD,IAAKF,EAAKE,KAEjC,gCAAM,4BAAQwD,UAAU,mBAAmBS,QAAS,kBAAK,EAAKlE,WAAWD,EAAKE,QAA9E,IAA+FF,EAAKY,KAApG,KACA,4BAAKZ,EAAKW,MAAV,KAAmBX,EAAKc,OACxB,yBAAKsD,IAAKpE,EAAKqE,IAAKC,IAAKtE,EAAKY,KAAM2D,MAAO,CAACC,OAAQ,eAI1D,4BAAQd,UAAY,wCAAwCS,QAAS,kBAAK,EAAKhE,aAAa+D,KAA5F,yB,GApSaO,IAAMC,Y,mECuYtBC,E,kDA7XX,WAAY/E,GAAO,IAAD,8BAEd,cAAMA,IAiOVgF,YAAc,SAAC/C,GACX,EAAKC,SAAS,CAAC+C,SAAUhD,EAAME,OAAOC,SAjOtC,EAAK3B,MAAQ,CACT0C,MAAM,GACN+B,OAAO,GACPlE,KAAK,GACLmE,SAAS,GACTC,KAAK,GACLrE,MAAO,KACPG,MAAM,EACN+D,SAAS,EACTI,MAAM,GACNC,SAAS,EACTC,KAAK,GACLC,SAAU,EACVC,UAAW,GACXC,UAAU,GACVC,UAAS,GAGb,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBACzB,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBAxBV,E,wDAsCd,IAAM1C,EAAQG,KAAKtD,MAAMiG,MAAMC,OAAO/C,MACnCL,aAAarB,eAAe,UAChBuB,KAAKK,MAAMP,aAAaM,MAC3B,GAAGD,QAAUA,GACjBL,aAAaqD,WAAW,W,uKAS1B7C,KAAKpB,SAAS,CAACiB,MAAOG,KAAKtD,MAAMiG,MAAMC,OAAO/C,MAAO+B,OAAQ5B,KAAKtD,MAAMiG,MAAMC,OAAOhB,S,OACvFT,EAAM,qEAAqEnB,KAAKtD,MAAMiG,MAAMC,OAAO/C,MAAM,IAAIG,KAAKtD,MAAMiG,MAAMC,OAAOhB,OAAO,QAChJ9D,IAAMgF,IAAI3B,GAAKnD,MAAK,SAACC,GACjBX,QAAQC,IAAIU,GAEG,KAAZA,EAAI8E,QAoCH5B,EAAM,qEAAqE,EAAKzE,MAAMiG,MAAMC,OAAO/C,MAAM,IAAI,EAAKnD,MAAMiG,MAAMC,OAAOhB,OAAO,QAC5I9D,IAAMgF,IAAI3B,GAAKnD,MAAK,SAACC,GACjB,EAAKW,SAAS,CAAClB,KAAMO,EAAIC,UAE7BiD,EAAM,qEAAqE,EAAKzE,MAAMiG,MAAMC,OAAO/C,MAAM,IAAI,EAAKnD,MAAMiG,MAAMC,OAAOhB,OAAO,SAC5I9D,IAAMgF,IAAI3B,GAAKnD,MAAK,SAACC,GACjB,EAAKW,SAAS,CAACnB,MAAOQ,EAAIC,UAE9BiD,EAAM,qEAAqE,EAAKzE,MAAMiG,MAAMC,OAAO/C,MAAM,IAAI,EAAKnD,MAAMiG,MAAMC,OAAOhB,OAAO,QAC5I9D,IAAMgF,IAAI3B,GAAKnD,MAAK,SAACC,GACjB,EAAKW,SAAS,CAACkD,KAAM7D,EAAIC,UAE7BiD,EAAM,qEAAqE,EAAKzE,MAAMiG,MAAMC,OAAO/C,MAAM,IAAI,EAAKnD,MAAMiG,MAAMC,OAAOhB,OAAO,SAC5I,EAAKhD,SAAS,CAACiD,SAAUV,MAEzB9D,MAAM,8DAEN,EAAKX,MAAMsG,QAAQ7C,KAAK,aAE7B7B,OAAM,SAAU2E,GACf3F,QAAQC,IAAI0F,GACZ5F,MAAM,4DAENmB,OAAOC,SAASd,QAAQ,iC,gJAM5BL,QAAQC,IAAIyC,KAAKtD,MAAMiG,MAAMC,OAAO/C,OACpCvC,QAAQC,IAAIyC,KAAKtD,MAAMiG,MAAMC,OAAOhB,QAEpC5B,KAAKkD,Y,wCAGSC,GACd,IAAMC,EAAWD,EAAEE,cAAcvE,MACjCkB,KAAKpB,SAAS,CAACmD,MAAOqB,M,uCAITD,GACbnD,KAAKpB,SAAS,CAACqD,KAAMkB,EAAEE,cAAcvE,U,qCAE1BqE,GACXA,EAAEG,iBACFhG,QAAQC,IAAIyC,KAAKtD,OACjBsD,KAAKtD,MAAMsG,QAAQ7C,KAAK,Y,8BAIpBgD,GAAG,IAAD,OACNA,EAAEG,iBAEF,IAAIC,GAAS,EAkBb,GAjBAvD,KAAK7C,MAAMiF,UAAUrB,KAAI,SAACjE,GACtB,IAAME,EAAM4D,OAAOC,KAAK/D,GAaxB,MAZc,WAAXE,EAAI,GACqB,KAArB,EAAKG,MAAM4E,QACV1E,MAAM,uBACNkG,GAAS,GAGE,SAAXvG,EAAI,IACe,KAApB,EAAKG,MAAM8E,OACV5E,MAAM,sBACNkG,GAAS,GAGV,QAGRA,EAAO,CACN,GAAG/D,aAAarB,eAAe,QAAQ,CACnCb,QAAQC,IAAI,iBACZ,IAAIiG,EAAU9D,KAAKK,MAAMP,aAAaM,MACtCxC,QAAQC,IAAI,WAAYiG,GACxB,IAAItF,EAAO,GAEPuF,MAAMC,QAAQF,GAKdtF,EAAOsF,GAJPlG,QAAQC,IAAI,iBACZW,EAAKiC,KAAKqD,IAKdlG,QAAQC,IAAI,gBAAiBW,GAC7B,IAAMyF,EAAM,CACR/F,MAAOoC,KAAK7C,MAAMwE,SAClBR,IAAKnB,KAAK7C,MAAM0E,SAChBpE,MAAOuC,KAAK7C,MAAMM,MAClBC,KAAMsC,KAAK7C,MAAMO,KACjBmC,MAAOG,KAAK7C,MAAM0C,MAClB7C,IAAK4G,kBAEe,KAArB5D,KAAK7C,MAAM4E,QACV4B,EAAI5B,MAAQ/B,KAAK7C,MAAM4E,OAEJ,KAApB/B,KAAK7C,MAAM8E,OACV0B,EAAI1B,KAAOjC,KAAK7C,MAAM8E,MAE1B/D,EAAKiC,KAAKwD,GACVnE,aAAaC,QAAQ,OAAQC,KAAKC,UAAUzB,QAE1C,CACFZ,QAAQC,IAAI,iCACZ,IAAMoG,EAAM,CACR/F,MAAMoC,KAAK7C,MAAMwE,SACjBR,IAAKnB,KAAK7C,MAAM0E,SAChBpE,MAAOuC,KAAK7C,MAAMM,MAClBC,KAAMsC,KAAK7C,MAAMO,KACjBmC,MAAOG,KAAK7C,MAAM0C,MAClB7C,IAAK4G,kBAGe,KAArB5D,KAAK7C,MAAM4E,QACV4B,EAAI5B,MAAQ/B,KAAK7C,MAAM4E,OAEJ,KAApB/B,KAAK7C,MAAM8E,OACV0B,EAAI1B,KAAOjC,KAAK7C,MAAM8E,MAE1B,IAAI/D,EAAO,GACXA,EAAKiC,KAAKwD,GACVnE,aAAaC,QAAQ,OAAQC,KAAKC,UAAUzB,IAIhD8B,KAAKtD,MAAMsG,QAAQ7C,KAAK,a,+BAYvB,IAAD,OAEJ,OAAGH,KAAK7C,MAAMkF,SAEN,kBAAC,IAAD,CAAUhC,GAAK,CACXC,SAAS,YAMjB,6BACI,yBAAKE,UAAY,mBACb,yBAAKA,UAAW,aACZ,yBAAKA,UAAY,aACb,wBAAIA,UAAY,iBAAhB,eAMZ,yBAAKA,UAAU,UAAUa,MAAO,CAACwC,cAAc,UAC3C,yBAAKrD,UAAY,gBACb,yBAAKA,UAAU,WAEX,yBAAKA,UAAY,gBACb,6BACA,wBAAKA,UAAU,aAAaR,KAAK7C,MAAM0C,OACvC,wBAAIW,UAAU,aAAaR,KAAK7C,MAAMO,MACtC,uBAAG8C,UAAU,aAAb,IAA2BR,KAAK7C,MAAMM,OACtC,uBAAG+C,UAAU,aAAb,IAA2BR,KAAK7C,MAAM2E,MACtC,6BANJ,WAQQ,yBAAKtB,UAAY,cACb,yBAAKA,UAAU,WACX,2BAAOA,UAAU,QAAQC,KAAK,OAAOC,YAAY,QAAQC,SAAUX,KAAK0B,gBAGpF,kBAACoC,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,MAAM,UAAUvB,UAAU,6CAA6CS,QAASjB,KAAKsC,SAAjH,eACA,0BAAMjB,MAAO,CAAC2C,OAAQ,SACtB,kBAACF,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,MAAM,UAAUvB,UAAU,+BAA+BS,QAASjB,KAAKwC,eAAgBnB,MAAO,CAAC4C,UAAW,SAAS,kBAAC,IAAD,CAAgBhC,KAAM,OAExKjC,KAAK7C,MAAMiF,UAAYpC,KAAK7C,MAAMiF,UAAUrB,KAAI,SAACjE,GAC9C,IAAME,EAAM4D,OAAOC,KAAK/D,GACxB,MAAc,WAAXE,EAAI,GAEC,yBAAKA,IAAKA,GACN,2BAAIA,GACJ,yBAAKwD,UAAU,UACX,4BAAQG,SAAU,EAAK8B,kBACvB3D,MAAO,EAAK3B,MAAM4E,OAEd,4BAAQjD,MAAM,GAAG9B,IAAK,KACrBF,EAAKE,GAAK+D,KAAI,SAACmD,GACZ,OACI,4BAAQpF,MAAOoF,EAAOlH,IAAKkH,GAAQA,SAW3C,SAAXlH,EAAI,GAEL,yBAAKA,IAAKA,GACN,2BAAIA,GACJ,yBAAKwD,UAAU,UACX,4BAAQG,SAAU,EAAK+B,iBACvB5D,MAAO,EAAK3B,MAAM8E,MADlB,MAEI,4BAAQnD,MAAM,GAAG9B,IAAK,KACrBF,EAAKE,GAAK+D,KAAI,SAACmD,GACZ,OACI,4BAAQpF,MAAOoF,EAAOlH,IAAKkH,GAAQA,SAYxD,QASP,OAIXlE,KAAK7C,MAAM+E,SAAS,GAAGlC,KAAK7C,MAAM+E,SAAS,EAAElC,KAAK7C,MAAM6E,QACzD,yBAAKxB,UAAU,wBACX,gCACI,yBAAKU,IAAG,4EAAuElB,KAAKtD,MAAMiG,MAAMC,OAAO/C,MAA/F,YAAwGG,KAAKtD,MAAMiG,MAAMC,OAAOhB,OAAhI,YAA0I5B,KAAK7C,MAAMS,MAAM,EAA3J,QAAoKwD,IAAKpB,KAAK7C,MAAMO,KAAMyG,QAAS,WAAK,EAAKvF,SAAS,CAACoD,SAAS,QAE5O,kBAAC8B,EAAA,EAAD,CACIC,QAAQ,YACRhC,MAAM,UACNd,QAAS,WAAO,EAAKrC,SAAS,CAAChB,OAAQ,EAAKT,MAAMS,MAAM,EAAE,EAAKT,MAAM+E,UAAU,EAAK/E,MAAM+E,YAC1FkC,UAAW,kBAAC,IAAD,QAGf,kBAACN,EAAA,EAAD,CACAC,QAAQ,YACRhC,MAAM,UACNd,QAAS,WAAO,EAAKrC,SAAS,CAAChB,OAAQ,EAAKT,MAAMS,MAAM,GAAG,EAAKT,MAAM+E,YACtEkC,UAAW,kBAAC,IAAD,QAGX,yBAAK5D,UAAU,cAKnB,yBAAKA,UAAU,eACX,gCACI,yBAAKU,IAAKlB,KAAK7C,MAAM0E,SAAUT,IAAKpB,KAAK7C,MAAMO,e,GAvWpD6D,IAAMC,W,QCkBd6C,E,uKA/BP,OACI,6BACI,yBAAK7D,UAAY,mBACb,yBAAKA,UAAW,aACZ,yBAAKA,UAAY,aACb,wBAAIA,UAAY,SAAhB,aAGA,wBAAIA,UAAW,YAAf,0CAMZ,yBAAKA,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WACX,4BAAQA,UAAU,qBAAoB,kBAAC,IAAD,CAAMH,GAAG,SAASgB,MAAO,CAAEiD,eAAgB,SAA3C,eACtC,4BAAQ9D,UAAU,0BAA0BS,QAAS,WAAO5D,MAAM,kBAAlE,uB,GArBJkE,IAAMC,WCgEf+C,E,uKA7DP,OACI,6BACI,yBAAK/D,UAAY,mBACb,yBAAKA,UAAW,aACZ,yBAAKA,UAAY,aACb,wBAAIA,UAAY,SAAhB,YAGA,wBAAIA,UAAW,YAAf,2DAMZ,yBAAKA,UAAY,WACb,yBAAKA,UAAY,aACb,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,oCACX,kBAAC,IAAD,CAASyB,KAAM,KACf,uGAKR,yBAAKzB,UAAU,UACX,yBAAKA,UAAU,oCACX,kBAAC,IAAD,CAAeyB,KAAM,KACrB,kHAKR,yBAAKzB,UAAU,UACX,yBAAKA,UAAU,oCACX,kBAAC,IAAD,CAAUyB,KAAM,KAChB,8IAQpB,yBAAKzB,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WACX,4BAAQA,UAAU,qBAAoB,kBAAC,IAAD,CAAMH,GAAG,SAASgB,MAAO,CAAEiD,eAAgB,SAA3C,uB,GAjD3C/C,IAAMC,WCuBdgD,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAO,IAAIC,OAAK,EAACC,UAAWJ,IACnC,kBAAC,IAAD,CAAOE,KAAM,QAAQE,UAAWnI,IAEhC,kBAAC,IAAD,CAAOiI,KAAO,uBAAuBE,UAAWlD,IAChD,kBAAC,IAAD,CAAOgD,KAAO,OAAOE,UAAaN,IAElC,kBAAC,IAAD,CAAOM,UAAWN,OCZNO,QACW,cAA7BpG,OAAOC,SAASoG,UAEe,UAA7BrG,OAAOC,SAASoG,UAEhBrG,OAAOC,SAASoG,SAASlC,MACvB,2DCZNmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrH,MAAK,SAAAsH,GACJA,EAAaC,gBAEdjH,OAAM,SAAA2E,GACL3F,QAAQ2F,MAAMA,EAAMuC,c","file":"static/js/main.a17ec482.chunk.js","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport '../../App.sass';\nimport {\n  Redirect,\n} from \"react-router-dom\";\nimport axios from 'axios'\n\nvar FormData = require('form-data')\n\n\n\n\nclass ShoppingCartPage extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n          name:'',\n          phoneNumber:'',\n          email:'',\n          shoppingCart:[]\n\n        }\n    }\n\n\n    componentDidMount(){\n      var cart = localStorage.hasOwnProperty('cart') ? JSON.parse(localStorage.cart) : []\n      console.log(cart)\n      this.setState({shoppingCart: cart})\n      \n    }\n\n    aggregate(arr){\n      let agg = {}\n      arr.forEach((item)=>{\n        var store = item.store\n        agg[store] ? agg[store].push(item) : agg[store] = [item]\n        \n      })\n      \n      return agg;\n    \n    }\n\n    removeAfterPurchase = (buyItems) => {\n      buyItems.forEach(item => {\n        this.deleteItem(item.key)\n      })\n\n    }\n    \n    //this needs modularization\n    purchaseItem = async (buyItems) => {\n      if(this.state.email === \"\"){ //add this.state.email when its used\n        alert(\"Please enter address\")\n        return}\n      console.log('buyItems: ', buyItems[0])\n      var formatitems={}\n      buyItems.forEach(async item => {\n        console.log(item.price)\n        formatitems[item.name.replace(\"\\n\", \"\")]=[item.price.replace(\"\\n\", \"\").replace(\"$\", \"\"), item.count]\n      })\n      console.log(formatitems)\n      var invoiceID=''\n      // var format=JSON.stringify(formatitems)\n      var urlbus = 'http://13.57.233.151/invoice/add-invoice'\n      await axios.post(urlbus, {email:\"ramissir@ucsc.edu\"}).then(async (res) => {\n        console.log(res)\n        if(res.data.hasOwnProperty('_id')){\n          var urlbus = 'http://13.57.233.151/invoice/add-items'\n          invoiceID=res.data._id\n          await axios.post(urlbus, {\"invoiceID\":res.data._id,\"items\":formatitems}).then((res) => {\n            console.log(\"second time\", res)\n          })\n          console.log(\"interim\")\n          var urlbus = 'http://13.57.233.151/invoice/attach-address'\n          await axios.post(urlbus, {\"invoice\":invoiceID,\"address\":this.state.email}).then((res) => {\n            console.log(\"third time\", res)\n          })\n        } else{\n          alert('something wrong')\n        }\n\n      }).catch(function(err){\n        console.log(err)\n      })\n      // const itemPayload = JSON.stringify(buyItems)\n      // const store = buyItems[0].store\n      // console.log(itemPayload)\n      // this.props.history.replace('http://13.57.233.151/'+invoiceID)\n      window.location.replace('pay.kahzap.com/'+invoiceID)\n      \n      // if(this.state.name === \"\" || this.state.phoneNumber === \"\"){ //add this.state.email when its used\n      //   alert(\"Please enter name\")\n      // }else{\n      //   let data = new FormData();\n      //   data.append('items', itemPayload)\n      //   data.append('store', store)\n      //   data.append('name', this.state.name)\n      //   //debug\n      // //   for (var pair of data.entries()) {\n      // //     console.log(pair[0]+ ', ' + pair[1]); \n      // //    }\n        \n      //   let msg = \"Hey \" + this.state.name + \"! Your order of\"\n      //   let items = \"\"\n      //   buyItems.forEach((item) => {\n      //     console.log(item.name)\n      //     if(item.hasOwnProperty('color')){\n      //       items = items + item.color + ' '\n      //     }\n      //     if(item.hasOwnProperty('size')){\n      //       items = items + item.size + ' '\n      //     }\n      //     items = items + item.name + ' '\n      //   })\n      //   msg = msg + ' ' + items + 'is on the way!'\n      //   console.log('customer msg: ', msg)\n      //   const url = 'https://cn3qjkxqxj.execute-api.us-west-2.amazonaws.com/production/send_msg?message=' + msg + '&number=' + this.state.phoneNumber + '&subject=' + this.state.name.replace(/\\s/g, '') + 'Order'\n      //   await axios.get(url).then((res) => {\n      //     console.log(res)\n      //     if(!res.data.hasOwnProperty('MessageID')){\n      //       alert('something wrong')\n      //     }\n  \n      //   }).catch(function(err){\n      //     console.log(err)\n      //   })\n  \n      //   msg = \"New order for \" + this.state.name + \"!\"\n      //   msg = msg + ' ' + items + 'needs to be ready! Contact info for customer is: ' + this.state.phoneNumber\n      //   //send to business\n      //   console.log('business msg: ', msg)\n      //   const urlbus = 'https://cn3qjkxqxj.execute-api.us-west-2.amazonaws.com/production/notify_store?message=' + msg + '&store=' + store + '&subject=' + this.state.name.replace(/\\s/g, '') + 'Order'\n      //   await axios.get(urlbus).then((res) => {\n      //     console.log(res)\n      //     if(res.data.hasOwnProperty('MessageID')){\n      //       this.removeAfterPurchase(buyItems)\n      //       this.setState({itemsToBuy:buyItems,buy:true})\n      //     } else{\n      //       alert('something wrong')\n      //     }\n  \n      //   }).catch(function(err){\n      //     console.log(err)\n      //   })\n\n      // }\n\n\n    }\n\n    setName = (event)=>{\n      this.setState({name:event.target.value})\n    }\n\n    setPhoneNumber = (event)=>{\n      this.setState({phoneNumber:event.target.value})\n    }\n\n    setEmail = (event) => {\n      this.setState({email:event.target.value})\n    }\n\n    //don't think we need this anymore\n    onBuy = (itemsToBuy) =>{\n     \n      \n\n    }\n\n    deleteItem = (remove)=>{\n      let cart = this.state.shoppingCart\n      let newCart = cart.filter((item) => \n      item.key !== remove\n      )\n      this.setState((state) =>\n      {\n        return({shoppingCart: newCart})\n      })\n      \n      localStorage.setItem('cart', JSON.stringify(newCart))\n    }\n\n    //no longer needed?\n    deleteStore = (remove)=>{\n      \n      this.setState((state) =>\n      {\n        let cart = state.shoppingCart\n        let filt = cart.filter((item) => \n        item.store !== remove\n        )\n        return({shoppingCart: filt})\n      })\n      \n\n    }\n\n    deleteStore//??wat iz dis\n\n    render(){\n      if(this.state.buy){\n        return(\n          <Redirect to= {{\n        \n            pathname:'/confirmation',\n            state: {id: this.state.itemsToBuy }\n          }} />\n        )\n      }\n        return(\n          \n    <div>\n      \n       \n      <div className = 'hero is-primary' >\n        <div className =\"container\">\n          <div className = \"hero-body\">\n                <h1 className = \"title\">Shopping Cart\n               </h1>\n                <h2 className ='subtitle'>Enter information and click \"purchase\"</h2>\n          </div>\n        </div>\n        \n      </div>\n      \n      \n      {/* <div className = 'section'> */}\n        {/* <div className = \"notification is-dark\">\n          Please add a 1 to your phone number.\n          After you click 'Purchase', your name, and phone number will be sent to store owner, along with the items you want to buy.\n        </div> */}\n        {/* <div className = 'container'> \n        <div className = 'field is-horizontal'>\n            <div className = 'field-label'>\n              <label className=\"label\">Name</label>\n            </div>\n            <div className = 'field-body'>\n              <div className=\"control\">\n                  <input className=\"input\" type=\"text\" placeholder=\"Text input\" onChange={this.setName}/>\n              </div>\n            </div>\n          </div> */}\n          {/* <div className = 'field is-horizontal'>\n            <div className = 'field-label'>\n              <label className=\"label\">Phone number</label>\n            </div>\n            <div className = 'field-body'>\n              <div className=\"control\">\n                  <input className=\"input\" type=\"text\" placeholder=\"Text input\" onChange={this.setPhoneNumber}/>\n              </div>\n              </div>\n            </div> */}\n            {/* <div className = 'field is-horizontal'>\n              <div className = 'field-label'>\n                <label className=\"label\">Email</label>\n              </div>\n              <div className = 'field-body'>\n                <div className=\"control\">\n                    <input className=\"input\" type=\"text\" placeholder=\"Text input\" onChange={this.setEmail}/>\n                </div>\n              </div>\n            </div> */}\n        {/* </div> */}\n        {/* </div> */}\n          \n        <div className = 'section'>\n\n        \n\n\n        <div className = 'container'>\n        <div className = \"notification is-offwhite\">Address\n                  <div className = 'field is-horizontal'>\n              <div className = 'field-body'>\n                <div className=\"control\">\n                    <input className=\"input\" type=\"text\" placeholder=\"Delivery Address Here\" onChange={this.setEmail}/>\n                </div>\n              </div>\n            </div>\n            </div>\n          <div className = \"columns\">\n              <div className = 'column'>\n\n              {\n                \n              Object.keys(this.aggregate(this.state.shoppingCart)).map((store) =>{\n                var agg = this.aggregate(this.state.shoppingCart);\n                var storeIts = agg[store];\n                return (\n                  <div className='box' key={store}>\n                    \n                  <h2 className =\"is-size-2\">{store}</h2> {/*<button className=\"delete is-large\" onClick={()=>this.deleteStore(store)}></button>  don't think we need to delete a store?*/}\n                  {storeIts.map((item) =>{\n                  return (\n                    <div className = \"content\" key={item.key}>\n                      \n                        <h3 > <button className=\"delete is-medium\" onClick={()=> this.deleteItem(item.key)}></button> {item.name} </h3>\n                        <h4>{item.price} x{item.count}</h4>\n                        <img src={item.url} alt={item.name} style={{height: '200px'}}/>   \n                    </div>                  \n                  )})}\n                  \n                  <button className = 'button is-link is-fullwidth is-medium' onClick={()=> this.purchaseItem(storeIts)}>Purchase</button>\n\n                  </div>\n                  \n                )\n              })}\n             \n                \n              </div>\n          </div>  \n        </div>\n        </div>  \n            </div>\n        )\n    }\n}\n\n\n\nexport default ShoppingCartPage;","import React from 'react';\nimport '../../App.css';\nimport '../../App.sass';\nimport axios from 'axios'\nimport {\n    Redirect,\n  } from \"react-router-dom\";\nimport { uuid } from 'uuidv4';\nimport {\n    // Container,\n    // Typography,\n    // Input,\n    // FormHelperText,\n    // Select,\n    // MenuItem,\n    // Card,\n    // CardContent,\n    Button,\n  } from \"@material-ui/core\";\n  import Forward from \"@material-ui/icons/ArrowForward\";\n  import Backward from \"@material-ui/icons/ArrowBack\";\n  import {MdShoppingCart} from 'react-icons/md'\nclass ItemPage extends React.Component{\n    constructor(props){\n        // const host = window.location.hostname;\n        super(props);\n        this.state = {\n            store:'',\n            itemID:'',\n            name:'',\n            imageURL:'',\n            desc:'',\n            price: null,\n            count:0,\n            quantity:1,\n            color:'',\n            loading: true,\n            size:'',\n            slidenum: 3,\n            slidelist: [],\n            otherInfo:[],\n            redirect:false,\n        }\n        //this allows for the access of this.props\n        this.addCart = this.addCart.bind(this)\n        this.redirectToCart = this.redirectToCart.bind(this)\n        this.handleChangeColor = this.handleChangeColor.bind(this)\n        this.handleChangeSize = this.handleChangeSize.bind(this)\n    }\n\n    // ErrorFallback({error, resetErrorBoundary}) {\n    // return (\n    //     <div role=\"alert\">\n    //     <p>Something went wrong:</p>\n    //     <pre>{error.message}</pre>\n    //     <button onClick={resetErrorBoundary}>Try again</button>\n    //     </div>\n    // )\n    // }\n\n    checkCart(){\n        const store = this.props.match.params.store\n        if(localStorage.hasOwnProperty('cart')){\n            let data = JSON.parse(localStorage.cart)\n            if(data[0].store !== store){\n                localStorage.removeItem('cart')\n            }\n\n        }\n\n    }\n\n    async getData(){\n        //set store and itemID in app state then fetch data \n        await this.setState({store: this.props.match.params.store, itemID: this.props.match.params.itemID})\n        let url = 'https://raw.githubusercontent.com/thebigbadbobby/productpics/main/'+this.props.match.params.store+'/'+this.props.match.params.itemID+'/name'\n        axios.get(url).then((res) => {\n            console.log(res)\n            //do the get request using axios and then check if res.data isn't empty\n            if(res.status==200){\n                // const infoObj = res.data.Item.info\n                // console.log(res.data.Item.info)\n                // console.log(this.state.slidenum)\n                // for(let key in infoObj){\n                //     //each product will have name, image and price for sure and the rest of the information is in the default case which is stored in the otherInfo array\n                //     switch(key){\n                //         case \"name\":\n                //             this.setState({name: infoObj[key]})\n                //             break\n                //         case \"image\":\n                //             this.setState({imageURL: infoObj[key]})\n                //             break\n                //         case \"price\":\n                //             this.setState({price: infoObj[key]})\n                //             break\n                //         case \"desc\":\n                //             this.setState({desc: infoObj[key]})\n                //             break\n                //         case \"slidelist\":\n                //             this.setState({slidelist: infoObj[key]})\n                //             break\n                //         default:\n                //             console.log(key)\n                //             const name = key\n                //             console.log(infoObj[key])\n                //             let listOfExtras = this.state.otherInfo\n                //             let objItem = {\n                //                 [name]: infoObj[key],\n                //             }\n                //             listOfExtras.push(objItem)\n                //             console.log(listOfExtras)\n                //             this.setState({otherInfo: listOfExtras})\n                //             break\n                //     }\n                // }\n                url = 'https://raw.githubusercontent.com/thebigbadbobby/productpics/main/'+this.props.match.params.store+'/'+this.props.match.params.itemID+'/name'\n                axios.get(url).then((res) => {\n                    this.setState({name: res.data})\n                })\n                url = 'https://raw.githubusercontent.com/thebigbadbobby/productpics/main/'+this.props.match.params.store+'/'+this.props.match.params.itemID+'/price'\n                axios.get(url).then((res) => {\n                    this.setState({price: res.data})\n                })\n                url = 'https://raw.githubusercontent.com/thebigbadbobby/productpics/main/'+this.props.match.params.store+'/'+this.props.match.params.itemID+'/desc'\n                axios.get(url).then((res) => {\n                    this.setState({desc: res.data})\n                })\n                url = 'https://raw.githubusercontent.com/thebigbadbobby/productpics/main/'+this.props.match.params.store+'/'+this.props.match.params.itemID+'/1.png'\n                this.setState({imageURL: url})\n            }else{\n                alert('uh oh this url is bad whoops, redirecting you to the cart!')\n                // this.setState({redirect:true})\n                this.props.history.push('/404/')\n            }\n        }).catch(function (error) {\n            console.log(error);\n            alert(\"This product doesn't exist! Click ok to go back to cart.\")\n                // this.setState({redirect:true})\n            window.location.replace('http://localhost:8081/cart')\n        })\n\n    }\n\n    componentDidMount(){\n        console.log(this.props.match.params.store)\n        console.log(this.props.match.params.itemID)\n        // this.checkCart()\n        this.getData()\n    }\n\n    handleChangeColor(e){\n        const newColor = e.currentTarget.value\n        this.setState({color: newColor})\n\n    }\n\n    handleChangeSize(e){\n        this.setState({size: e.currentTarget.value})\n    }\n    redirectToCart(e){\n        e.preventDefault()\n        console.log(this.props)\n        this.props.history.push('/cart/')\n    }\n\n    //adds item to local storage and then changes to cart\n    addCart(e){\n        e.preventDefault()\n        //obj is the object stored in localStorage which has information\n        let isGood = true\n        this.state.otherInfo.map((item) => {\n            const key = Object.keys(item)\n            if(key[0] === 'Colors'){\n                if(this.state.color === ''){\n                    alert('Select color please')\n                    isGood = false\n                }\n            }\n            else if(key[0] === 'Size'){\n                if(this.state.size === ''){\n                    alert(\"Select Size please\")\n                    isGood = false\n                }\n            }\n            return null\n        })\n\n        if(isGood){\n            if(localStorage.hasOwnProperty('cart')){\n                console.log('cart detected')\n                let oldData = JSON.parse(localStorage.cart)\n                console.log('oldData ', oldData)\n                let data = []\n                // data = oldData\n                if(!Array.isArray(oldData)){\n                    console.log('no array reee')\n                    data.push(oldData)\n    \n                }else{\n                    data = oldData\n                }\n                console.log('data here is ', data)\n                const obj = {\n                    count: this.state.quantity,\n                    url: this.state.imageURL,\n                    price: this.state.price,\n                    name: this.state.name,\n                    store: this.state.store,\n                    key: uuid()\n                }\n                if(this.state.color !== ''){\n                    obj.color = this.state.color\n                }\n                if(this.state.size !== ''){\n                    obj.size = this.state.size\n                }\n                data.push(obj)\n                localStorage.setItem(\"cart\", JSON.stringify(data))\n    \n            } else{\n                console.log('cart not detected adding cart')\n                const obj = {\n                    count:this.state.quantity,\n                    url: this.state.imageURL,\n                    price: this.state.price,\n                    name: this.state.name,\n                    store: this.state.store,\n                    key: uuid()\n        \n                }\n                if(this.state.color !== ''){\n                    obj.color = this.state.color\n                }\n                if(this.state.size !== ''){\n                    obj.size = this.state.size\n                }\n                let data = []\n                data.push(obj)\n                localStorage.setItem(\"cart\", JSON.stringify(data))\n    \n            }\n            //redirects to /cart page\n            this.props.history.push('/cart/')\n            // this.setState({redirect:true})\n\n        }\n\n       \n    }\n    \n    setQuantity = (event)=>{\n        this.setState({quantity: event.target.value})\n      }\n\n    render(){\n        //displays information and button which you can click on\n        if(this.state.redirect){\n            return(\n                <Redirect to= {{\n                    pathname:'/cart/',\n                }} />\n              )\n                \n        }\n        return(\n            <div>\n                <div className = 'hero is-primary' >\n                    <div className =\"container\">\n                        <div className = \"hero-body\">\n                            <h1 className = \"title is-left\">\n                                ShopLink\n                            </h1>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"columns\" style={{paddingBottom:'100px'}}>\n                    <div className = \"column is-4 \">\n                        <div className=\"content\">\n                            \n                            <div className = \"notification\">\n                                <br></br>\n                                <h1  className='is-size-1'>{this.state.store}</h1>\n                                <h2 className='is-size-3'>{this.state.name}</h2>\n                                <p className='is-size-4'> {this.state.price}</p>\n                                <p className='is-size-5'> {this.state.desc}</p>\n                                <br></br>\n                                Quantity\n                                    <div className = 'field-body'>\n                                        <div className=\"control\">\n                                            <input className=\"input\" type=\"text\" placeholder=\"ex. 2\" onChange={this.setQuantity}/>\n                                        </div>\n                                    </div>\n                                <Button variant=\"contained\" color=\"warning\" className=\"button is-primary is-large is-warning mt-6\" onClick={this.addCart}>Add To Cart</Button>\n                                <span style={{margin: '5px'}}></span >\n                                <Button variant=\"contained\" color=\"warning\" className=\"button is-large is-info mt-6\" onClick={this.redirectToCart} style={{marginTop: '10px'}}><MdShoppingCart size={60} /></Button> \n                            </div>\n                            {this.state.otherInfo ? this.state.otherInfo.map((item) => {\n                                const key = Object.keys(item)\n                                if(key[0] === 'Colors'){\n                                    return(\n                                        <div key={key}>\n                                            <p>{key}</p>\n                                            <div className='select'>\n                                                <select onChange={this.handleChangeColor}\n                                                value={this.state.color}\n                                                >   \n                                                    <option value='' key= ''></option>\n                                                    {item[key].map((items) => {\n                                                        return(\n                                                            <option value={items} key={items}>{items}</option>\n                                                        )\n                                                    })}\n                                                </select>\n                                            </div>\n                                        </div>\n                                        \n                                        \n                                        )\n                                    \n                                    \n                                }else if(key[0] === 'Size'){\n                                    return(\n                                        <div key={key}>\n                                            <p>{key}</p>\n                                            <div className='select'>\n                                                <select onChange={this.handleChangeSize}\n                                                value={this.state.size}\n                                                >   <option value='' key= ''></option>\n                                                    {item[key].map((items) => {\n                                                        return(\n                                                            <option value={items} key={items}>{items}</option>\n                                                        )\n                                                    })}\n                                                </select>\n                                            </div>\n                                        </div>\n                                        \n                                        \n                                        )\n\n                                }\n\n                                return null\n\n\n                                \n                                // <div className='select'>\n                                //     <p></p>\n\n                                // </div>\n                                //\n                            }): null}\n                        </div>\n                        \n                    </div>\n                    {this.state.slidenum<10&this.state.slidenum>0&this.state.loading?\n                    <div className=\"column is-two-thirds\">    \n                        <figure >\n                            <img src={`https://raw.githubusercontent.com/thebigbadbobby/productpics/main/${this.props.match.params.store}/${this.props.match.params.itemID}/${this.state.count+1}.png`} alt={this.state.name} onError={()=>{this.setState({loading: false})}}/>   \n                        </figure>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {this.setState({count: (this.state.count-1+this.state.slidenum)%this.state.slidenum})}}\n                            startIcon={<Backward />}\n                        >  \n                        </Button>\n                        <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {this.setState({count: (this.state.count+1)%this.state.slidenum})}}\n                        startIcon={<Forward />}\n                        >\n                        </Button>\n                        <div className=\"is-right\">\n                        \n                        </div>\n                    </div>\n                    :\n                    <div className=\"column is-3\">    \n                        <figure >\n                            <img src={this.state.imageURL} alt={this.state.name}/>   \n                        </figure>\n                    </div>   \n                    }\n                \n                </div>\n\n        \n              \n\n                \n              \n            </div>\n            \n            \n                 \n            \n        )\n    }\n\n\n}\n\nexport default ItemPage;","import React from 'react';\nimport '../../App.css';\nimport '../../App.sass';\nimport {\n    Link,\n  } from \"react-router-dom\";\nclass ErrorPage extends React.Component{\n\n    render(){\n        return(\n            <div>\n                <div className = 'hero is-primary' >\n                    <div className =\"container\">\n                        <div className = \"hero-body\">\n                            <h1 className = \"title\">\n                                QR Kahzum\n                            </h1>\n                            <h2 className ='subtitle'>\n                                Error 404 - Looks like you're lost!\n                            </h2>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"section\">\n                    <div className=\"container\">\n                        <div className=\"buttons\">\n                            <button className=\"button is-success\"><Link to=\"/cart/\" style={{ textDecoration: 'none' }}> View Cart</Link></button>\n                            <button className='button is-link is-light' onClick={() => {alert('Coming soon!')}}>Store login</button>\n                        </div>    \n                    </div>\n         \n                </div>\n               \n            </div>\n        )\n        \n    }\n\n}\n\nexport default ErrorPage","import React from 'react';\nimport '../../App.css';\nimport '../../App.sass';\nimport {\n    Link,\n  } from \"react-router-dom\";\nimport {MdPhoneIphone, MdStore, MdPeople, MdShoppingCart} from 'react-icons/md'\nclass HomePage extends React.Component{\n    render(){\n        return(\n            <div>\n                <div className = 'hero is-primary' >\n                    <div className =\"container\">\n                        <div className = \"hero-body\">\n                            <h1 className = \"title\">\n                                ShopLink\n                            </h1>\n                            <h2 className ='subtitle'>\n                                A new shopping experience for the present and future\n                            </h2>\n                        </div>\n                    </div>\n                </div>\n                <div className = 'section'>\n                    <div className = 'container'>\n                        <div className=\"columns\">\n                            <div className=\"column\">\n                                <div className='box level-item has-text-centered'>\n                                    <MdStore size={70}/>\n                                    <h1>\n                                        Our app allows you to transform your store into a showroom experience\n                                    </h1>\n                                </div>\n                            </div>\n                            <div className=\"column\">\n                                <div className='box level-item has-text-centered'>\n                                    <MdPhoneIphone size={70}/>\n                                    <h1>\n                                        QR codes allow us to present more detail and allow to save or checkout from cart\n                                    </h1>\n                                </div>\n                            </div>\n                            <div className=\"column\">\n                                <div className='box level-item has-text-centered'>\n                                    <MdPeople size={70}/>\n                                    <h1>\n                                        Every purchase made notifies both customer and business to make sure orders get ready as soon as possible\n                                    </h1>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"section\">\n                    <div className=\"container\">\n                        <div className=\"buttons\">\n                            <button className=\"button is-success\"><Link to=\"/cart/\" style={{ textDecoration: 'none' }}> View Cart</Link></button>\n                        </div>    \n                    </div>\n         \n                </div>\n               \n            </div>\n\n        )\n        \n    }\n\n}\n\nexport default HomePage","import React from 'react';\nimport './App.css';\nimport './App.sass';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport ShoppingCartPage from './pages/shoppingcart/shoppingcart.js'\nimport ItemPage from './pages/itemPage/index'\n// import ConfirmationPage from './pages/confirmOrderPage/index.js'\nimport ErrorPage from './pages/404Page/index'\nimport HomePage from './pages/HomePage/index'\nimport { HashRouter } from \"react-router-dom\";\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path = '/' exact component={HomePage}/>\n        <Route path ='/cart' component={ShoppingCartPage}/>\n          {/* <ShoppingCartPage/> */}\n        <Route path = '/item/:store/:itemID' component={ItemPage}/>\n        <Route path = '/404' component = {ErrorPage}/>\n        {/* <Route path ='/confirmation' component = {ConfirmationPage}/> */}\n        <Route component={ErrorPage}/>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}